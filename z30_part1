    PROCEDURE Z40_Z10_DEL(I_Z30REC   IN CYG_Z30F%ROWTYPE,
                      O_ERRCD    IN OUT NUMBER,
                      O_ERRTX    IN OUT VARCHAR2)
    IS
        CURSOR CUR_Z30F_Z40(Z30REC   IN CYG_Z30F%ROWTYPE)
        IS
            SELECT 'X'
              FROM CYG_Z30F Z30F
             WHERE Z30F.FILLER10 = Z30REC.FILLER10
             　 AND Z30F.場所C =Z30REC.場所C
               AND Z30F.X31 = Z30REC.X31
               AND Z30F.品目K = Z30REC.品目K
               AND Z30F.品目C = Z30REC.品目C
               AND Z30F.在庫理由K = Z30REC.在庫理由K
               AND Z30F.荷姿 = Z30REC.荷姿
               AND Z30F.明細NO = Z30REC.明細NO
               --20150113　不具合・仕様変更管理票0208 MODIFIED BY XIAXUE BEGIN
               -- AND Z30F.工程C = Z30REC.明細NO;
               AND Z30F.工程C = Z30REC.工程C;
               --20150113　不具合・仕様変更管理票0208 MODIFIED BY XIAXUE END
        REC_Z30F_Z40 CUR_Z30F_Z40%ROWTYPE;
        
        CURSOR CUR_Z30F_Z10(Z30REC   IN CYG_Z30F%ROWTYPE)
        IS
            SELECT 'X'
              FROM CYG_Z30F Z30F
             WHERE Z30F.場所C = Z30REC.場所C
               AND Z30F.X31 = Z30REC.X31
               AND Z30F.品目K = Z30REC.品目K
               AND Z30F.品目C = Z30REC.品目C
               AND Z30F.在庫理由K = Z30REC.在庫理由K
               AND Z30F.荷姿 = Z30REC.荷姿
               AND Z30F.明細NO = Z30REC.明細NO
               AND Z30F.工程C = Z30REC.工程C;
        REC_Z30F_Z10 CUR_Z30F_Z10%ROWTYPE;
        
        REC_Z40F CYG_Z40F%ROWTYPE;
        REC_Z10F CYG_Z10F%ROWTYPE;
    BEGIN

        OPEN CUR_Z30F_Z40(I_Z30REC);
        FETCH CUR_Z30F_Z40 INTO REC_Z30F_Z40;
        IF CUR_Z30F_Z40%NOTFOUND THEN  
            --CYG_Z40Fデータを削除します
            G_ERRCD := 0;
            G_ERRTX := NULL;
            REC_Z40F.場所C := I_Z30REC.場所C;
            REC_Z40F.X31 := I_Z30REC.X31;
            REC_Z40F.品目K := I_Z30REC.品目K;
            REC_Z40F.品目C := I_Z30REC.品目C;
            REC_Z40F.在庫理由K := I_Z30REC.在庫理由K;
            REC_Z40F.荷姿 := I_Z30REC.荷姿;
            REC_Z40F.明細NO := I_Z30REC.明細NO;
            REC_Z40F.工程C := I_Z30REC.工程C;
            REC_Z40F.LOTNO := I_Z30REC.FILLER10;
            
            CYG_C00_Z40.DEL_OPE(REC_Z40F,G_ERRCD,G_ERRTX);
            IF G_ERRCD <> 0 THEN 
                RAISE SUB_ERROR;
            END IF;
        END IF;
        CLOSE CUR_Z30F_Z40;
        
        --CYG_Z10Fデータを削除します
        OPEN CUR_Z30F_Z10(I_Z30REC);
        FETCH CUR_Z30F_Z10 INTO REC_Z30F_Z10;
        IF CUR_Z30F_Z10%NOTFOUND THEN  
            G_ERRCD := 0;
            G_ERRTX := NULL;
            REC_Z10F.場所C := I_Z30REC.場所C;
            REC_Z10F.X31 := I_Z30REC.X31;
            REC_Z10F.品目K := I_Z30REC.品目K;
            REC_Z10F.品目C := I_Z30REC.品目C;
            REC_Z10F.在庫理由K := I_Z30REC.在庫理由K;
            REC_Z10F.荷姿 := I_Z30REC.荷姿;
            REC_Z10F.明細NO := I_Z30REC.明細NO;
            REC_Z10F.工程C := I_Z30REC.工程C;
            
            CYG_C00_Z10.DEL_OPE(REC_Z10F,G_ERRCD,G_ERRTX);
            IF G_ERRCD <> 0 THEN 
                RAISE SUB_ERROR;
            END IF;
        END IF;
        CLOSE CUR_Z30F_Z10;
    EXCEPTION
            --RAISE ERROR_OCCURED;
        WHEN SUB_ERROR THEN
            IF CUR_Z30F_Z40%ISOPEN THEN
                CLOSE CUR_Z30F_Z40;
            END IF;
            IF CUR_Z30F_Z10%ISOPEN THEN
                CLOSE CUR_Z30F_Z10;
            END IF;
            O_ERRCD := G_ERRCD;
            O_ERRTX := G_ERRTX || ' IN CYG_C00_Z30_COMMON_Z40_Z10_DEL ';
        WHEN OTHERS THEN
            O_ERRCD := SQLCODE;
            O_ERRTX := SQLERRM || ' IN CYG_C00_Z30_COMMON_Z40_Z10_DEL ';
    END Z40_Z10_DEL;
    --20141230 ADDED BY ZHUSAI EBGIN 
    
/********************************************************************************/
/* Title  : Z30_DEL                                */
/* 概　要 : 在庫受払ﾚｺｰﾄﾞ(CYG_Z30F)を複数ﾚｺｰﾄﾞ削除する              */
/*       : 　在庫管理ファイル(CYG_Z10F)を更新する                */
/*       : 　ロット在庫管理ファイル(CYG_Z40F)を更新する            */
/*------------------------------------------------------------------------------*/
/* 新規   : 2011/04/01 EX Nakajima                        */
/********************************************************************************/
PROCEDURE Z30_DEL(
  I_Z30SEQ    IN     CYG_Z30F.受払SEQ%TYPE,
  I_Z30SEQ2    IN     CYG_Z30F.受払SEQ2%TYPE,
    O_ERRCD       IN OUT  NUMBER,
    O_ERRTX       IN OUT  VARCHAR2)
IS

  --------------- コントロールマスタカーソル
  CURSOR M10M_CUR IS
  SELECT  当月月次締日
  FROM  DFW_M10M
  WHERE  KEY  =  '01';
  M10M_REC  M10M_CUR%ROWTYPE;
  --------------- 在庫受払ファイルカーソル
  CURSOR  Z30F1_CUR  IS
    SELECT  *
    FROM  CYG_Z30F
    WHERE  受払SEQ  = I_Z30SEQ
    AND    受払SEQ2  = I_Z30SEQ2;
  --------------- 在庫受払ファイルカーソル
  CURSOR Z30F2_CUR IS
    SELECT   *
    FROM  CYG_Z30F
    WHERE  受払SEQ    = I_Z30SEQ
    ORDER BY  受払SEQ2;

  Z30F_REC  CYG_Z30F%ROWTYPE;
  --------------- 品目マスタカーソル
  CURSOR  M40M_CUR  IS
    SELECT  標準単位
        ,在備K
        ,NVL(FILLER20,' ')  AS FILLER20
    FROM  DFW_M40M
    WHERE  X31   =  '31'
    AND    品目K  =  Z30F_REC.品目K
    AND    品目C  =  Z30F_REC.品目C;
  M40M_REC  M40M_CUR%ROWTYPE;

BEGIN
  G_ERRCD := 0; --20111012 ADDED BY ECT LVLU
  --------------- コントロールマスタ参照
  OPEN  M10M_CUR;
  FETCH  M10M_CUR  INTO  M10M_REC;
  CLOSE  M10M_CUR;

  --------------- 在庫受払ファイル参照
  IF  I_Z30SEQ2  IS NULL  THEN
    OPEN  Z30F2_CUR;
  ELSE
    OPEN  Z30F1_CUR;
  END IF;
  LOOP
  IF  I_Z30SEQ2  IS NULL  THEN
    FETCH Z30F2_CUR INTO Z30F_REC;
    EXIT WHEN Z30F2_CUR%NOTFOUND;
  ELSE
    FETCH Z30F1_CUR INTO Z30F_REC;
    EXIT WHEN Z30F1_CUR%NOTFOUND;
  END IF;
    --------------- 品目マスタ参照
    OPEN  M40M_CUR;
    FETCH  M40M_CUR  INTO  M40M_REC;
    CLOSE  M40M_CUR;

    --------------- 在庫管理判定
    IF  (RTRIM(M40M_REC.在備K)  IS  NOT  NULL)  AND
      (M40M_REC.在備K      <  '8'    )  THEN

      --------------- 在庫受払予定受払判定
      IF  Z30F_REC.受払K  <  '8'  THEN

        --------------- 在庫受払データより在庫管理ファイル更新
        CYG_C00_Z10.UPD_OPE_受払(  Z30F_REC,        -- レコード  (在庫受払）
                      '-',          -- 更新モード
                      M10M_REC.当月月次締日,  -- 当月月次締日
                      G_ERRCD,
                      G_ERRTX);
        IF  G_ERRCD <> 0  THEN  RAISE  ERROR_OCCURED;  END  IF;

        --------------- ロット在庫管理ファイル更新判定判定
        IF  M40M_REC.FILLER20  =  '1'  THEN

          --------------- 在庫受払データよりロット在庫管理ファイル更新
          CYG_C00_Z40.UPD_OPE_受払(  Z30F_REC,        -- レコード  (在庫受払）
                        '-',          -- 更新モード
                        M10M_REC.当月月次締日,  -- 当月月次締日
                        G_ERRCD,
                        G_ERRTX);
          IF  G_ERRCD <> 0  THEN  RAISE  ERROR_OCCURED;  END  IF;
        END IF;
      END IF;
      --------------- 在庫受払データ削除
      CYG_C00_Z30.DEL_OPE( Z30F_REC , G_ERRCD , G_ERRTX );
      IF  G_ERRCD  <> 0  THEN  RAISE ERROR_OCCURED;  END IF;
      --20141230 ADDED BY ZHUSAI BEGIN
      Z40_Z10_DEL(Z30F_REC , G_ERRCD , G_ERRTX);
      IF G_ERRCD <> 0 THEN
          RAISE ERROR_OCCURED;
      END IF;
      --20141230 ADDED BY ZHUSAI END
    END IF;
  ---------------------------------------------------
  END LOOP;
  IF Z30F1_CUR%ISOPEN THEN CLOSE Z30F1_CUR; END IF;
  IF Z30F2_CUR%ISOPEN THEN CLOSE Z30F2_CUR; END IF;

EXCEPTION
  -------------------------------------------------------
  --  例外処理
  -------------------------------------------------------
  WHEN  ERROR_OCCURED  THEN
    IF M10M_CUR%ISOPEN THEN CLOSE M10M_CUR; END IF;
    IF Z30F1_CUR%ISOPEN THEN CLOSE Z30F1_CUR; END IF;
    IF Z30F2_CUR%ISOPEN THEN CLOSE Z30F2_CUR; END IF;
    IF M40M_CUR%ISOPEN THEN CLOSE M40M_CUR; END IF;
    O_ERRCD         :=  G_ERRCD;
    O_ERRTX         :=  G_ERRTX
              ||'CYG_C00_Z30_COMMON.Z30_DEL ';
    -- ===================================
    -- 20110518 DELETED BY ECT LIANGHC
    -- ===================================
    --RAISE   ERROR_OCCURED;
  WHEN  OTHERS  THEN
    IF M10M_CUR%ISOPEN THEN CLOSE M10M_CUR; END IF;
    IF Z30F1_CUR%ISOPEN THEN CLOSE Z30F1_CUR; END IF;
    IF Z30F2_CUR%ISOPEN THEN CLOSE Z30F2_CUR; END IF;
    IF M40M_CUR%ISOPEN THEN CLOSE M40M_CUR; END IF;
    O_ERRCD         :=  SQLCODE;
    O_ERRTX         :=  SQLERRM
              ||'CYG_C00_Z30_COMMON.Z30_DEL ';
    -- ===================================
    -- 20110518 DELETED BY ECT LIANGHC
    -- ===================================
    --RAISE   ERROR_OCCURED;
END;
/*
    --==========================================================================
    -- Name   : Z30_GET_SEQ
    -- Desc   : 在庫受払の受払SEQを採番
    -- History: 06-APR-2011  ECT LIANGHC  CREATED
    -- Note   :
    --==========================================================================
    PROCEDURE Z30_GET_SEQ(
        IO_SEQNO IN OUT NUMBER,
        O_ERRCD  IN OUT NUMBER,
        O_ERRTX  IN OUT VARCHAR2)
    IS
